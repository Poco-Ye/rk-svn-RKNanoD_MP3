/*********************************************************
* random number generator
*
*
*author:evan wu
**********************************************************/
#ifndef MY_RANDOM_H
#define MY_RANDOM_H

#include <string.h>

#undef  EXT

#ifdef _IN_MY_RANDOM_C_
#define EXT
#else
#define EXT extern
#endif

//#define MAIN_TEST   //use main function to test
#define MDK_PLATFORM//on mdk platform

#ifdef MAIN_TEST
#include <stdio.h>
#endif

//#define RANDOM_INLINE __inline
#define RANDOM_INLINE __forceinline
#define MY_RAND_MAX   4096//2048
#define Start 12

#define COEFF_A (1103515245UL%MY_RAND_MAX)
#define COEFF_C (12345UL%MY_RAND_MAX)


typedef enum
{
    RANDOM_PREVIOUS = -1,
    RANDOM_CUR = 0,
    RANDOM_NEXT = 1
}DIRECTION_TYPE;

typedef struct
{
    unsigned int seed;
    unsigned int C;
    unsigned int period;
}RAND_GENERATOR;


//interface to caller

/*
this funtion must be called before getting any random number.
[0~num-1]is the range of random number generated by this generator.
orgSeed0,orgSeed1 are two seeds of this generator,made by timer is strongly remcommeded.
what more,make sure the two seeds are in the range[0~num-1] too.
*/
/**********
orgSeed0:serial number of current file.orgSeed1 be used to distinguish two random list.
if the input parameters is the same,then the random list is the same.
***********/
EXT int CreateRandomList(unsigned int num, const unsigned int orgSeed0, const unsigned int orgSeed1);

/*
get a random number.
*/
EXT unsigned int randomGenerator(DIRECTION_TYPE direction, const unsigned int num);

#endif